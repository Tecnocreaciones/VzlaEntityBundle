<?php

/*
 * This file is part of the TecnocreacionesVzlaEntityBundle package.
 * 
 * (c) www.tecnocreaciones.com.ve
 * 
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Tecnocreaciones\Vzla\EntityBundle\Repository;

/**
 * CityRepository
 * Repositorio de ciudad (vendor.app.repository.vzla.city)
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CityRepository extends \Coramer\Sigtec\WebBundle\Repository\Model\MasterEntityRepository 
{
    /**
     * Repositorio de las ciudades (app.repository.vzla.city)
     * @param \Tecnocreaciones\Vzla\EntityBundle\Entity\State $state
     * @return type
     */
    function getQueryByState($state) {
        $qb = $this->createQueryBuilder('c');
        if($state === null){
           $qb->setMaxResults(0);
           return $qb;
        }
        $qb
                ->andWhere('c.state = :state')
                ->setParameter('state', $state)
                ;
        return $state;
    }
    /**
     * Retorna las ciudades por el municipio
     */
    function findCitiesByMunicipality($municipalityId) {
        $qb = $this->createQueryBuilder('c');
        $qb
                ->innerJoin('c.municipality', 'm')
                ->andWhere('c.active = 1')
                ->andWhere('m.id = :municipality')
                ->setParameter('municipality', $municipalityId)
                ;
        return $qb->getQuery()->getResult();
    }
    /**
     * Retorna las ciudades por la parroquia
     */
    function findCitiesByParish($parishId) {
        return $this->findQueryCitiesByParish($parishId)->getQuery()->getResult();
    }
    /**
     * Retorna las ciudades por la parroquia
     */
    function findQueryCitiesByParish($parishId) {
        $qb = $this->getQueryAllActive();
        $qb
                ->innerJoin('c.parishes', 'c_p')
                ->andWhere('c_p.id = :parish')
                ->setParameter('parish', $parishId)
                ;
          //  $this->addSort($qb);
        return $qb;
    }
    
    protected function getAlias() {
        return "c";
    }
    
    public function findForSearch(array $criteria = null, array $orderBy = null) {
        $criteria = $this->parseCriteria($criteria);
        
        $a = $this->getAlias();
        $qb = $this->getQueryBuilder();
        $qb
            ->select($a.".id id")
            ->addSelect($a.".description ".$a."_description")
            ->addSelect("c_s.description c_s_description")
            ->innerJoin($a.".state",$a."_s")
            ;
        $this->addFieldDescription($criteria, $qb);
        
        $this->applyCriteria($qb, $criteria->toArray());
        $this->applySorting($qb, $orderBy);
        
        return $this->getScalarPaginator($qb);
    }
}
